version: "3.7"


services:

  db:
    build: ./_build/db

    volumes:
      - /etc/localtime:/etc/localtime:ro
      - main_db:/var/lib/postgresql/data/

    networks:
      - back

    environment:
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "${DATABASE_DB}"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s

  cache:
    # image: redis:6.2-alpine
    build: ./_build/redis

    command: 'redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}'

    networks:
      - back

    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - cache:/data

    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}

  back:
    build: ./_build/node

    depends_on:
      cache:
        condition: service_started
      db:
        condition: service_healthy

    networks:
      - back

    volumes:
      - /etc/localtime:/etc/localtime:ro

    environment:
      REDIS_HOST: cache
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}

      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${DATABASE_DB}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      
      PIXEL_BUFFER_SIZE: ${PIXEL_BUFFER_SIZE}
      PIXEL_MINUTE_TIMER: ${PIXEL_MINUTE_TIMER}

      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}

    working_dir: /app

  front:
    build: ./_build/react

    volumes:
      - /etc/localtime:/etc/localtime:ro

    networks:
      - front

    working_dir: /app


  nginx:
    build: 
      context: .
      dockerfile: ./_build/nginx/Dockerfile

    depends_on:
      - front
      - back

    ports:
     - "7979:80"

    volumes:
      - /etc/localtime:/etc/localtime:ro

    networks:
      - front
      - back


networks:
  front:
  back:

volumes:
  main_db:
  cache:


